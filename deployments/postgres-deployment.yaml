apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql
  template:
    metadata:
      labels:
        io.kompose.service: postgresql
    spec:
      securityContext:
        fsGroup: 999  # Ensure the filesystem is accessible by the postgres user
      initContainers:
        - name: init-postgres
          image: alpine:latest
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - |
                echo "Cleaning up /var/lib/postgresql/data..."
                rm -rf /var/lib/postgresql/data/* && \
                mkdir -p /var/lib/postgresql/data && \
                chown -R 999:999 /var/lib/postgresql/data && \
                chmod 0750 /var/lib/postgresql/data && \
                echo "Cleaning up /var/run/postgresql..."
                mkdir -p /var/run/postgresql && \
                chown -R 999:999 /var/run/postgresql && \
                chmod 0750 /var/run/postgresql && \
                echo "Initialization complete."
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: private-azurefile-pvc  # Updated PVC reference
            - mountPath: /var/run/postgresql
              name: postgresql-run
      containers:
        - name: postgresql
          image: postgres:14-alpine
          env:
            - name: POSTGRES_PASSWORD
              value: root
            - name: TZ
              value: America/New_York
            - name: PGDATA
              value: /var/lib/postgresql/data
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            allowPrivilegeEscalation: true
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: private-azurefile-pvc  # Updated PVC reference
            - mountPath: /docker-entrypoint-initdb.d
              name: postgres-cm0
              readOnly: true
            - mountPath: /etc/postgresql
              name: config-postgres
              readOnly: true
            - mountPath: /var/run/postgresql
              name: postgresql-run
      volumes:
        - name: private-azurefile-pvc  # Use the new PVC name
          persistentVolumeClaim:
            claimName: private-azurefile-pvc  # Reference to the PVC created using Azure Files
        - name: postgres-cm0
          configMap:
            name: postgres-cm0
        - name: config-postgres
          configMap:
            name: postgres-cm1
        - name: postgresql-run
          emptyDir: {}
