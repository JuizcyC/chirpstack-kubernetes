apiVersion: v1
data:
  chirpstack-gateway-bridge-basicstation-us915_0.toml: |
    # See https://www.chirpstack.io/gateway-bridge/install/config/ for a full
    # configuration example and documentation.

    [integration.mqtt.auth.generic]
    servers=["tcp://mosquitto:1883"]
    username=""
    password=""

    [integration.mqtt]
    event_topic_template="us915_0/gateway/{{ .GatewayID }}/event/{{ .EventType }}"
    state_topic_template="us915_0/gateway/{{ .GatewayID }}/state/{{ .StateType }}"
    command_topic_template="us915_0/gateway/{{ .GatewayID }}/command/#"

    [backend]
    type="basic_station"

    [backend.basic_station]
    bind=":3001"
    tls_cert=""
    tls_key=""
    ca_cert=""

    region="US915"
    frequency_min=923000000
    frequency_max=928000000

    [[backend.basic_station.concentrators]]

    [backend.basic_station.concentrators.multi_sf]
    frequencies=[
      902300000,
      902500000,
      902700000,
      902900000,
      903100000,
      903300000,
      903500000,
      903700000,
    ]
  
    [backend.basic_station.concentrators.lora_std]
    frequency=903000000
    bandwidth=500000
    spreading_factor=8

  chirpstack-gateway-bridge.toml: |
    # See https://www.chirpstack.io/gateway-bridge/install/config/ for a full
    # configuration example and documentation.

    [integration.mqtt.auth.generic]
    servers=["tcp://mosquitto:1883"]
    username=""
    password=""

    json=true

    region="US915_0"

    # Gateway backend configuration.
    [backend]

    # Backend type.
    #
    # Valid options are:
    #   * semtech_udp
    #   * concentratord
    #   * basic_station
    type="semtech_udp"

    # Semtech UDP packet-forwarder backend.
    [backend.semtech_udp]
    # ip:port to bind the UDP listener to
    #
    # Example: 0.0.0.0:1700 to listen on port 1700 for all network interfaces.
    # This is the listener to which the packet-forwarder forwards its data
    # so make sure the 'serv_port_up' and 'serv_port_down' from your
    # packet-forwarder matches this port.
    udp_bind = "0.0.0.0:1700"

    # Fake RX timestamp.
    #
    # Fake the RX time when the gateway does not have GPS, in which case
    # the time would otherwise be unset.
    fake_rx_time=false

    # Integration configuration.
    [integration]
    # Payload marshaler.
    #
    # This defines how the MQTT payloads are encoded. Valid options are:
    # * protobuf:  Protobuf encoding
    # * json:      JSON encoding (for debugging)
    marshaler="json"

    # MQTT integration configuration.
    [integration.mqtt]
    # Event topic template.
    event_topic_template="gateway/{{ .GatewayID }}/event/{{ .EventType }}"

    # State topic template.
    #
    # States are sent by the gateway as retained MQTT messages (by default)
    # so that the last message will be stored by the MQTT broker. When set to
    # a blank string, this feature will be disabled. This feature is only
    # supported when using the generic authentication type.
    state_topic_template="gateway/{{ .GatewayID }}/state/{{ .StateType }}"

    # Command topic template.
    command_topic_template="gateway/{{ .GatewayID }}/command/#"

    # State retained.
    #
    # By default this value is set to true and states are published as retained
    # MQTT messages. Setting this to false means that states will not be retained
    # by the MQTT broker.
    state_retained=true

    # Keep alive will set the amount of time (in seconds) that the client should
    # wait before sending a PING request to the broker. This will allow the client
    # to know that a connection has not been lost with the server.
    # Valid units are 'ms', 's', 'm', 'h'. Note that these values can be combined, e.g. '24h30m15s'.
    keep_alive="30s"
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: chirpstack-gateway-bridge
  name: chirpstack-gateway-bridge-cm0
